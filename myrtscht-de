#!/usr/bin/perl

# all the nice modules
use strict;
use warnings;
use Log::Log4perl qw( :easy );
use Getopt::Long qw( :config no_ignore_case bundling );
use Pod::Usage;
use lib '/home/moses/Perl/Myrtscht/lib';
use Games::Tournament::TableTennisDe qw( :all );

our $VERSION = '0.02';

# set up all the nice options
pod2usage( {
        -exitval => 2,
        -verbose => 2,
           } ) unless @ARGV;  # no options are no good
my %Options;
GetOptions(
        's'      => \$Options{s},
        'a'      => \$Options{a},
        'p'      => \$Options{p},
        'h|help' => \$Options{h},
        'r:s'    => \$Options{r},
        'g:s'    => \$Options{g},
        'n:s'    => \$Options{n},
        'd:i'    => \$Options{d},
        'P:s'    => \$Options{P},
) or pod2usage( {
        -exitval => 2,
        -verbose => 2,
                } );

# initialize the logger or not
if (defined $Options{d}) {
    my %loglevels = (
            1 => 5000,
            2 => 10000,
            3 => 20000,
            4 => 30000,
            5 => 40000,
            6 => 50000,
            );

    Log::Log4perl->easy_init( {
        level  => $loglevels{$Options{d} || 1},
        layout => '%d: [%L] %m %n',
        } );

    # little debbugging help
    for my $option (keys %Options) {
        DEBUG "Set option $option to $Options{$option}." # my favourite
            if defined $Options{$option};                # part
    }
}

# invoke the subroutines corresponding to the options
{
my @arguments = (\%Options, \@ARGV);
if (defined $Options{n}) {
    INFO "Invoking the subroutine creating a new tournament.";
    create_new_tournament(@arguments);
} elsif (defined $Options{p}) {
    INFO "Invoking the subroutine processing the group files.";
    process_group_files(@arguments);
} elsif (defined $Options{a}) {
    INFO "Invoking the subroutine preprocessing the game files.";
    preprocess_game_files(@arguments);
} elsif (defined $Options{h}) {
    pod2usage( { -exitval => 1,
                 -verbose => 2,
                 -output  => \*STDOUT,
               } );
}
}


__END__

=encoding utf8

=head1 NAME

myrtscht - My Round robin Tournament SCHeduling for Table tennis



=head1 ÜBERSICHT

myrtscht B<-n> [I<Turniername>] [B<-g> I<Gruppenzahl>] [B<-d> [I<Level>]]

myrtscht B<-p> I<Dateien> [B<-r> I<Gewinnsätze>] [B<-s>]
[B<-P> I<Drucker>] [B<-d> [I<Level>]]

myrtscht B<-a> I<Spieldateien>/I<Gruppenverzeichnis> [B<-d> [I<Level>]]

myrtscht B<--help>

myrtscht B<-h>



=head1 BESCHREIBUNG

B<myrtscht> dient der Verwaltung von Tischtennisturnieren im
Gruppensystem. Aber es sollte auch möglich sein, es für anderen Spiele
zu verwenden, sofern diese kein Unentschieden erlauben. B<myrtscht>
ist vollständig text- und kommandobasiert, sodass weder eine eigene
Kommandozeile noch eine graphische Benutzeroberfläche existieren, ich
bitte um Entschuldigung (, falls das entschuldigt werden muss). Wie
Sie in der Übersicht sehen können, bedient man es also, indem man
Befehle eingibt und Textdateien bearbeitet.


=head1 OPTIONEN UND ARGUMENTE

=over

=item B<-n> [I<Turniername>]

Erstellt ein neues, für das Turnier genutztes, Verzeichnis mit den
Gruppendateien darin. Sie können auch einen Namen für das Verzeichnis
angeben, was keine Auswirkung auf die Gruppendateien hat.
Normalerweise ist der Name F<< Turnier-<Datum> >>.

=item B<-g> I<Gruppenzahl>

Definiert die Anzahl der bei der Ausführung mit B<-n> erstellten
Gruppen. Die Vorgabe ist 10.

=item B<-p> I<Gruppendateien>

Erstellt von jeder gegebenen I<Gruppendatei> ein Gruppenverzeichnis, das
die Spieldateien enthält und druckt Spielzettel, auf die man die
Ergebnisse schreiben kann, in Form von Tabellen aus.

=item B<-r> I<Gewinnsätze>

Definiert die Anzahl der I<Gewinnsätze>, wenn B<myrtscht> im
B<-p>-Modus ausgeführt wird. Die Vorgabe ist 2.

=item B<-s>

Verhindert das Drucken, bei der Ausführung mit B<-p>.

=item B<-P> I<Drucker>

Definiert den I<Drucker>, der bei der Ausführung mit B<-p> verwendet
wird. Die Vorgabe ist der Standarddrucker.

=item B<-a> I<Spieldateien>/I<Gruppenverzeichnis>

Berechnet die Platzierungen anhand der gegebenen I<Spieldateien> oder
des gegebenen I<Gruppenverzeichnisses> und schreibt sie in die Datei
F<Platzierungen>.

=item B<-d> [I<Level>]

Schaltet in den Debug-Modus. Das Protokoll wird unter der Verwendung
des L<Log::Log4perl(3)|Log::Log4perl> Moduls erstellt. Es kann ein
DebugI<level> von 1 bis 6 angegeben werden, das die Anzahl der
Meldungen reguliert. Der Standardwert ist 1.

=item B<-h> oder B<--help>

Gibt diese Hilfe aus.

=item B<--version>

Gibt die Version aus und beendet.

=back



=head1 DATEIEN

B<myrtscht> legt im Verlauf seiner Arbeit verschiedene Dateien an, die
entweder eine bestimmte Endung oder einen bestimmten Namen tragen.

=head2 Das Turnierverzeichnis

Das Turnierverzeichnis ist das Verzeichnis, in dem alle Informationen
für ein Turnier gespeichert werden. Es wird empfohlen, in diesem oder
in untergeordneten Verzeichnissen zu verweilen, solange man mit
B<myrtscht> arbeitet.


=head2 Die Gruppendateien F<*.g>

Dies sind die Dateien, die man als erstes zu Gesicht bekommt, wenn man
ein Turnier initialisiert. Ihr Format (vor dem Bearbeiten) ist:

    Name:
    Tische:
    Mitglieder:
    
Z<> Hinter S<"Name: "> muss der Name der Gruppe stehen. Hinter
S<"Tische: "> stehen die Namen der Tische (Zahlen werden empfohlen),
an denen die Gruppe spielt, in Form einer durch Kommas getrennten
Liste. (Ja, es sind auch anderer Trenner möglich. Schauen Sie in
den Quellcode, wenn Sie etwas gegen Kommas haben!)
I<Unter> "Mitglieder:" sollten die Namen der Gruppenmitglieder
stehen.

=head3 Beispiel:

    Name: 50 vor Christus
    Tische: 1, 2, 3
    Mitglieder:
    Asterix
    Obelix
    Gaius Iulius Caesar
    Gaius Bonus

=head3 Bemerkung:

Namen mit mehr als 20 Buchstaben sind unerträglich. (Vielleicht auch
die Eltern der Personen mit solchen Namen.)


=head2 Die Gruppenverzeichnisse F<*.d>

Gruppenverzeichnisse werden erstellt, wenn man B<myrtscht> mit der
Option B<-p> ausführt. Abgesehen von der Dateiendung tragen sie den
Namen der Gruppendatei, zu der sie gehören. Alle Dinge, die mit einer
Gruppe zu tun haben, sollten im jeweiligen Verzeichnis erledigt
werden. Deshalb wird auch die Gruppendatei in das Gruppenverzeichnis
verschoben, wenn man B<myrtscht> im B<-p>-Modus ausführt.


=head2 Die Spieldateien F<*.s>

Dies sind die Dateien, die sich in den Gruppenverzeichnissen nach der
Ausfürung mit B<-p> befinden. Sie sehen so aus (vor der Bearbeitung):

    Asterix | Gaius Iulius Caesar

Hier werden die Ergebnisse der Spiele niedergeschrieben.

=head3 Beispiel:

    Asterix | Gaius Iulius Caesar
    11  8
    10  12
    11  9

=head3 Bemerkung:

Es wird empfohlen, nur Leerraum (keine Kommas oder ähnliches) zwischen
den Zahlen zu lassen.


=head2 Der Ausdruck/F<Spielzettel>

Wenn man B<myrtscht> mit der Option B<-p> ausführt, erstellt es die
Datei F<Spielzettel>, sendet sie an den Drucker und löscht sie wieder.
Wenn B<-s> eingeschaltet ist, ist das Drucken und Löschen
ausgeschaltet. In beiden Fällen haben die Teile des Ausdrucks dieses
Format:

    Gruppe: 50 vor Christus
    Runde: 2     Tisch: 3              ID: 0303
    ----------------------+---------------------
           Asterix        | Gaius Iulius Caesar
    ----------------------+---------------------
                          |
                          |
                          |
    ----------------------+---------------------

Jeder dieser Teile repräsentiert ein Spiel. Hinter S<"Gruppe: "> steht
der Name der Gruppe. S<"Runde: "> ist die Runde, in der, S<"Tisch: ">
ist der Tisch, an dem das Spiel stattfindet. Die "ID" wird aus den
Namen des Gruppenverzeichnisses (die ersten zwei Ziffern) und der
Spieldatei (die letzten zwei oder drei Ziffern) gebildet. So kann man
leicht die Spieldatei, die zu dem jeweiligen Spielzettel gehört,
herausfinden.  (Siehe auch
L<Games::Tournament::Myrtscht::TutDe|Games::Tournament::Myrtscht::TutDe>.)
Dann kommen die Namen der Gegner und in den Platz
darunter kann der Schiedsrichter die Ergebnisse eines Spiels
schreiben. Die Höhe dieses Platzes variiert mit der Anzahl der
Gewinnsätze.


=head2 Die Platzierungsdatei F<Platzierungen>

Hier stehen die Ergebnisse einer Gruppe geschrieben. Unten sieht man
ein Beispiel, allerdings ist es ein wenig breit, um auch mit hohen
Ergebnissen arbeiten zu können,


"Platz" und "Name" sind eindeutig. "Spiele", "Sätze" und "Bälle"
repräsentieren die gespielten Spiele, Sätze bzw. Bälle im Format
"gewonnen : verloren". SD und BD stellen die Satz- bzw. Balldifferenz
dar.

    Rang | Name                  | Spiele  |   Sätze   |  SD  |    Bälle    |  BD
    -----+-----------------------+---------+-----------+------+-------------+------
      1. | Asterix               |  3 : 0  |   6 : 1   |  5   |   76 : 56   |  20
      2. | Gaius Iulius Caesar   |  2 : 1  |   5 : 2   |  3   |   73 : 52   |  21
      3. | Obelix                |  1 : 2  |   2 : 4   |  -2  |   53 : 45   |   8
      4. | Gaius Bonus           |  0 : 3  |   0 : 6   |  -6  |   17 : 66   |  -49



=head1 BEMERKUNGEN

=over

=item *

B<myrtscht> passt nicht auf, ob die Eingabedaten sinnvoll, gültig und
regelgerecht sind.

=item *

B<myrtscht> passt nicht auf, ob die angegebenen Kommandozeilenoptionen
sinnvoll sind.

=item *

Es ist notwendig, dass der Ausdruck 67 Zeilen je Blatt hat. In
späteren Versionen, wenn B<myrtscht> Konfigurationsdateien benutzt
oder ich eine andere Möglichkeit implementiere, werden auch andere
Anzahlen möglich sein. Zur Zeit können Sie natürlich den Quellcode an
Ihre Bedürfnisse anpassen oder einen Patch schreiben, der das Problem
ganz umgeht. - Ich nehme Ihre Vorschläge gern an.

=item *

Sollte es irgendwelche Fehler in meiner Rechtschreibung oder Grammatik
geben - bitte entschuldigen Sie und schreiben Sie mir! Bei Fehlern, die
ich nicht korrigiere, weicht meine Hausorthographie von der
allgemeingültigen deutschen Rechtschreibung ab.

=item *

Wenn irgendjemand meine Art der Dokumentation nicht mag - bitte
schreiben Sie mir!

=item *

Mein Name wird mit "o Umlaut" geschrieben, aber perldoc(1) mag die
korrekte Schreibung nicht - genauso wie die all der anderen deutschen
Wörter, die mit Umlauten oder scharfem S geschrieben werden. Wenn Sie
die korrekte Schreibung sehen wollen, benutzen Sie bitte
S<C<pod2man --utf8 myrtscht | nroff -Tlatin1 -man | less>> anstatt
B<myrtscht> mit B<-h> oder B<--help> auszuführen!

=back



=head1 BUGS

Wenn man Umlaute per Format druckt, wird das Layout
etwas durcheinandergebracht, da Umlaute wie ein Buchstabe gedruckt, aber
wie zwei Zeichen gezählt werden. - Ich denke, das ist ein Problem,
das nicht bloß bei mir auftritt und auch schon eine Lösung gefunden
hat -, die aber noch nicht bei mir angekommen ist. Vielleicht kann ja
irgendeiner, der das liest helfen.

Den Fehler, dass unbekannte oder keine Kommandozeilenoptionen
angegeben werden, wollte ich eigentlich mit einem C<pod2usage(2)>
abfangen, wie es auch in der englischen Version dieses Programms der
Fall ist. Merkwürdigerweise funktioniert dies aber nicht - es wird keine
Hilfemeldung ausgegeben. Deshalb musste ich es so ändern, dass die
vollständige Dokumentation ausgegeben wird, was natürlich hässlich ist.
Es gibt dazu auch schon zwei angefangene Diskussionen auf
L<www.perlmonks.org>, die aber scheinbar auch zu nichts geführt haben.

Wenn jemand noch andere Fehler findet - schreiben Sie mir! Es wird
auch eine Website geben und ich will das Programm auf
L<GNU Savannah|http://savannah.nongnu.org> hochladen. Es gibt also
Hoffnung auf einen richtigen Bugtracker.



=head1 SIEHE AUCH

=over 4

=item L<Games::Tournament::Myrtscht::TutDe>

Das Tutorium auf Deutsch.

=item L<Games::Tournament::Myrtscht::TutEn>

Das Tutorium auf Englisch.

=item L<Games::Tournament::TableTennis>

Das zugrundeliegende Modul.

=item L<Games::Tournament::RoundRobin>

Das dem Modul zugrundeliegende Modul.

=back

Wenn ich etwas Zeit finde (vielleicht im Sommer), wird es auch eine
Website über dieses Programm (und andere Sachen) geben. Aber die
aktuelle Informationen sind immer auf
L<www.myrtscht.de|http://www.myrtscht.de> verfügbar.

Die aktuelle Entwicklerversion der Distribution (als git-Repository)
kann per

    $ git clone git://git.tuxfamily.org/gitroot/myrtsch/progrel.git

heruntergeladen werden.



=head1 AUTOR

Richard Möhn E<lt>richard.moehn@gmx.deE<gt>



=head1 COPYRIGHT AND LICENSE

Copyright 2008 by Richard Möhn E<lt>richard.moehn@gmx.deE<gt>

This program is free software.  You may copy or redistribute it under
the same terms as Perl itself.

=cut
